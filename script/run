# #! python
#! /usr/bin/python3


"""
Client Side program for Controlling Rboto

X - Exit program
A - Test Communication  
S - TTS engine input
"""

import subprocess as sb
import getch 
import os 
from colorama import init
from termcolor import colored 


sb.run("clear")
print(colored("\t\t-- R-BOTO Console --",'green'))
print()
sb.run("date")
print()
# b = sb.check_output("ls")
# print (a)
# print (b)
init()

#SERVO initilize 
import RPi.GPIO as gpio
from time import sleep
gpio.cleanup()
gpio.setmode(gpio.BCM)
gpio.setup(12,gpio.OUT)
servo = gpio.PWM(12,50)
servo.start(0)
print("initializing ..Servo ")
os.system("espeak 'Welcome to Rboto Console'")
# ..........

camServoAngle = 7 
# /home/jyo/RBOTO/script/run
def camControl():
	print(colored("Camera Control".upper(),'yellow','on_grey'))
	print(colored("""
				Use Arrow keys to Control Camera
				'C' (Capture) - capture picture
				'V' (Video)   - Record Video clip
				'X' (exit)    - back to previous menu

				""".upper(),'cyan'))
# print(colored("press Command key".upper(),'green','on_grey'))
	r_status = True 
	while True:
# key = input()
		global camServoAngle
		key = getch.getch()
		 # sb.run("clear")        
		 # print("\r")
		key = str(key).lower()
		if key == 'h':
			print(colored("\r< < < < <\t",'blue'),"{:3d}".format(camServoAngle),end='')
			if camServoAngle > 0:
				camServoAngle -= 1
				servo.ChangeDutyCycle(camServoAngle)
		if key == ';':
			print(colored("\r> > > > >\t",'red'),"{:3d}".format(camServoAngle),end='')
			if camServoAngle < 13:
				camServoAngle += 1 
				servo.ChangeDutyCycle(camServoAngle)
		if key.lower() == 'c':
			os.system("raspistill -o pic.jpg")
			print(colored("\rcaptured !!\t",'red'),end='')
		if key.lower() == 'v':
			if r_status:
				print(colored("\rRecording started.. !!\t",'green'),end='')
				r_status = False
			else:
				print(colored("\rRecording stopped.. !!\t",'red'),end='')
				r_status = True 
		if key == 'x':
			print(colored("\r> > > > >\t",'red'),"{:3d}".format(camServoAngle),end='')
			print("\rBack .....           \n\n",end='')
			break	
# sleep(.3)

# greet_msg1 = "espeak-ng hello"
# greet_msg2 ="espeak-ng welcome to R-Boto Console"

# sb.run("ls -l")
sleep(1)
# sb.check_output("espeak-ng welcome to R-Boto Console")
#sb.run("clear")        
while (1):
	print(colored("Press Control Keys (h for help)".upper(),'green'))
# a = str(input()).lower()
# print(colored("press Command key".upper(),'green'))
	a = str(getch.getch()).lower()
	if  a == 'exit' or a == 'x':
		exit()
	elif a == 'speak' or a == 's': 
		print(colored("Type message: ".upper(),'blue'))
		msg = input()
		t_msg ="espeak '"+msg+"'"
		os.system(t_msg)
	elif a == 'clear' or a == 'l': 
		c = sb.run("clear")        
	elif a == 'help' or a == 'h':
		print(colored("""
				Client Side program for Controlling Rboto

				X (exit) - Exit program
				A (Test) - Test Communication  
				S (speak) - TTS engine input
				C (camera) - Camera Control
				""".upper(),'cyan'))
	elif a == 'camcontrol' or a == 'c':
		camControl()

